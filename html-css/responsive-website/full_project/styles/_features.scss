.features-container {
    background: #323232;
    position: relative;
    // the features container will be relative to where it is so it doesn't move since we aren't adjusting it's placement which is good.
    z-index: 0;
    overflow: hidden; 
    // the wave img is much larger than it looks but we can use the overflow hidden to chop off the excess, this way the webpage will still be the predefined height of min-height 90vh;

    .wave {
        position: absolute;
        // however here, this interacts with the position relative of the parent because now we can make this absolute and move it on top of the position relative parent. we are moving the image with the values below. 
        left: 0;
        bottom: -25%;
        width: 100%; 
        // stretches the background to be the full width of the viewport
        z-index: -1;
    }
}

.features {
    min-height: 90vh;
    width: 80%;
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-around;

    .cards {
        display: flex;
        justify-content: space-around;
        color: black;
        
        .card{ 
            background: white;
            margin: 0rem 5rem;
            display: flex;
            flex-direction: column;
            text-align: center;
            border-radius: 2rem;
            overflow: hidden;
            // the img inside of the card is larger than the box so if we wanted to show the border radius then you need to do overflow hidden so that it now hide the excess content from the img.

            h4 {
                margin: 2rem 0rem 1rem;
            }

            p {
                padding: 2rem;
            }

            img {
                object-fit: cover;
            }
        }
    }
}